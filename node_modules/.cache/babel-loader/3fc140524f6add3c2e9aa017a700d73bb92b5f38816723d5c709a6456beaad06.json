{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport authReducer from './authSlice';\nimport dataReducer from './dataSlice';\nimport authMiddleware from './middlewire';\nconst middlewares = [authMiddleware];\nexport const store = configureStore({\n  reducer: {\n    auth: authReducer,\n    data: dataReducer\n  },\n  middleware: getDefaultMiddleware => getDefaultMiddleware().concat(middlewares)\n});","map":{"version":3,"names":["configureStore","authReducer","dataReducer","authMiddleware","middlewares","store","reducer","auth","data","middleware","getDefaultMiddleware","concat"],"sources":["C:/Users/Arya/Desktop/Project/src/app/store.ts"],"sourcesContent":["import { configureStore, Middleware } from '@reduxjs/toolkit';\r\nimport authReducer from './authSlice';\r\nimport dataReducer from './dataSlice';\r\nimport authMiddleware from './middlewire';\r\n\r\nconst middlewares: Middleware[] = [authMiddleware];\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    auth: authReducer,\r\n    data: dataReducer,\r\n  },\r\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(middlewares),\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\n"],"mappings":"AAAA,SAASA,cAAc,QAAoB,kBAAkB;AAC7D,OAAOC,WAAW,MAAM,aAAa;AACrC,OAAOC,WAAW,MAAM,aAAa;AACrC,OAAOC,cAAc,MAAM,cAAc;AAEzC,MAAMC,WAAyB,GAAG,CAACD,cAAc,CAAC;AAElD,OAAO,MAAME,KAAK,GAAGL,cAAc,CAAC;EAClCM,OAAO,EAAE;IACPC,IAAI,EAAEN,WAAW;IACjBO,IAAI,EAAEN;EACR,CAAC;EACDO,UAAU,EAAGC,oBAAoB,IAAKA,oBAAoB,CAAC,CAAC,CAACC,MAAM,CAACP,WAAW;AACjF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
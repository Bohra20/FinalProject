{"ast":null,"code":"// src/app/middleware.ts\n\nimport { Navigate } from 'react-router-dom';\nconst authMiddleware = store => next => action => {\n  // You might want to provide a more specific type for 'action' based on your action creators\n\n  if (action.type === 'auth/clearUser') {\n    // Add logic to clear user data from localStorage or cookies if needed\n    // Redirect to the sign-in page using Navigate\n    const navigateProps = {\n      to: '/signin'\n    };\n    return Navigate(navigateProps);\n  }\n  return next(action);\n};\nexport default authMiddleware;","map":{"version":3,"names":["Navigate","authMiddleware","store","next","action","type","navigateProps","to"],"sources":["C:/Users/Arya/Desktop/Project/src/app/middlewire.ts"],"sourcesContent":["// src/app/middleware.ts\r\nimport { Middleware } from 'redux';\r\nimport { RootState } from './store';\r\nimport { clearUser } from './authSlice';\r\nimport { Navigate, NavigateProps } from 'react-router-dom';\r\n\r\nconst authMiddleware: Middleware<{}, RootState> = (store) => (next) => (action: any) => {\r\n  // You might want to provide a more specific type for 'action' based on your action creators\r\n\r\n  if (action.type === 'auth/clearUser') {\r\n    // Add logic to clear user data from localStorage or cookies if needed\r\n    // Redirect to the sign-in page using Navigate\r\n    const navigateProps: NavigateProps = { to: '/signin' };\r\n    return Navigate(navigateProps);\r\n  }\r\n\r\n  return next(action);\r\n};\r\n\r\nexport default authMiddleware;\r\n"],"mappings":"AAAA;;AAIA,SAASA,QAAQ,QAAuB,kBAAkB;AAE1D,MAAMC,cAAyC,GAAIC,KAAK,IAAMC,IAAI,IAAMC,MAAW,IAAK;EACtF;;EAEA,IAAIA,MAAM,CAACC,IAAI,KAAK,gBAAgB,EAAE;IACpC;IACA;IACA,MAAMC,aAA4B,GAAG;MAAEC,EAAE,EAAE;IAAU,CAAC;IACtD,OAAOP,QAAQ,CAACM,aAAa,CAAC;EAChC;EAEA,OAAOH,IAAI,CAACC,MAAM,CAAC;AACrB,CAAC;AAED,eAAeH,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  isAuthenticated: false,\n  user: null\n};\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    setUser: (state, action) => {\n      state.isAuthenticated = true;\n      state.user = action.payload;\n    },\n    clearUser: state => {\n      state.isAuthenticated = false;\n      state.user = null;\n    }\n  }\n});\nexport const {\n  setUser,\n  clearUser\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","isAuthenticated","user","authSlice","name","reducers","setUser","state","action","payload","clearUser","actions","reducer"],"sources":["C:/Users/Arya/Desktop/Project/src/app/authSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\ninterface AuthState {\r\n  isAuthenticated: boolean;\r\n  user: any; // Modify this based on your user data structure\r\n}\r\n\r\nconst initialState: AuthState = {\r\n  isAuthenticated: false,\r\n  user: null,\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  reducers: {\r\n    setUser: (state, action: PayloadAction<any>) => {\r\n      state.isAuthenticated = true;\r\n      state.user = action.payload;\r\n    },\r\n    clearUser: (state) => {\r\n      state.isAuthenticated = false;\r\n      state.user = null;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setUser, clearUser } = authSlice.actions;\r\nexport default authSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAO7D,MAAMC,YAAuB,GAAG;EAC9BC,eAAe,EAAE,KAAK;EACtBC,IAAI,EAAE;AACR,CAAC;AAED,MAAMC,SAAS,GAAGJ,WAAW,CAAC;EAC5BK,IAAI,EAAE,MAAM;EACZJ,YAAY;EACZK,QAAQ,EAAE;IACRC,OAAO,EAAEA,CAACC,KAAK,EAAEC,MAA0B,KAAK;MAC9CD,KAAK,CAACN,eAAe,GAAG,IAAI;MAC5BM,KAAK,CAACL,IAAI,GAAGM,MAAM,CAACC,OAAO;IAC7B,CAAC;IACDC,SAAS,EAAGH,KAAK,IAAK;MACpBA,KAAK,CAACN,eAAe,GAAG,KAAK;MAC7BM,KAAK,CAACL,IAAI,GAAG,IAAI;IACnB;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEI,OAAO;EAAEI;AAAU,CAAC,GAAGP,SAAS,CAACQ,OAAO;AACvD,eAAeR,SAAS,CAACS,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}